<hamburger>
    <div class="hamburger">
        <button class="hamburger__button button button--hamburger" onclick={ handleToggle }>
            <i class={ state.isOpen ?
                'icon icon-hamburger-open':
                'icon icon-hamburger-close' } />
        </button>
        <div style="max-height: { state.modalStyles.maxHeight }"
             class={ state.isOpen ?
                'hamburger__modal hamburger__modal--open':
                'hamburger__modal hamburger__modal--closed' } onclick={ handleToggle }>
            <div class="hamburger__inner"></div>
        </div>
    </div>

    <script>

        /**
         *  Hamburger.riot
         *
         *  Tiny Component for mobile navigation.
         *
         *  <hamburger>
         *      <ul>
         *          <li><a href="#">Home</a></li>
         *          <li><a href="#">Blog</a></li>
         *      </ul>
         *  </hamburger>
         *
         *  @author Bj√∂rn Hase
         *  @license http://opensource.org/licenses/MIT The MIT License
         *  @link https://gitlab.tentakelfabrik.de/tentakelfabrik/tiny-components/hamburger Gitlab Repository
         *
         */

        export default {

            /**
             *
             *
             */
            state:
            {
                isOpen: false,
                modalStyles: { 'max-height': 0 }
            },

            /**
             *  getting innerHTML and remove
             *
             *
             */
            onBeforeMount()
            {
                this.content = this.root.innerHTML;
                this.root.innerHTML = '';
            }

            /**
             *  setting innerHTML
             *
             *
             */
            onMounted()
            {
                const wrapper = this.$('.hamburger__inner');
                wrapper.innerHTML = this.content;
            },

            /**
             *  toggle modal
             *
             *
             */
            handleToggle()
            {
                if (this.state.isOpen === true) {
                    this.state.isOpen = false;
                    this.state.modalStyles.maxHeight = 0;
                } else {
                    this.state.isOpen = true;
                    this.state.modalStyles.maxHeight = this.$('.hamburger__inner').getBoundingClientRect().height + 'px';
                }

                this.update();
            }
        }
    </script>
</hamburger>
